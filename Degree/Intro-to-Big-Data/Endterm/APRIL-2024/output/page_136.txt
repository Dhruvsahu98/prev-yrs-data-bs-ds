using an ETL pipeline by first computing sales for each day at 1AM local time of the next day, and then summing up the weekly sales every Sunday early morning at 3AM local time. This number gets reported to leadership every Sunday morning 9AM local time, so the ETL pipeline is scheduled to run every Sunday morning at 8AM local time. As a result of management change, it has decided to relocate its HQ to India. Which of the following changes will need to be done to its ETL pipeline to ensure the correct output continues to be produced?

**Options :**

6406532755145. ❌ The business time for the final weekly sum operation needs to be changed to that of Monday 3AM India time instead of Sunday 3AM Middle East time.

6406532755146. ✅ There is zero change needed since neither event time nor business time is changing whereas only the operational time is changing.

6406532755147. ❌ Since time zone has changed as well as week definition too, the definition of business time has changed. So, the ETL has to be rewritten entirely.

6406532755148. ❌ Nothing needs to change since daily sales is available at 1AM Middle East time which is anyway behind India time and so the numbers will be available before leadership comes in at 9AM.

6406532755149. ❌ Event time has changed since the event of week ending has changed in definition, and so the ETL needs to be changed to consider the new event in the data.

**Question Number : 176 Question Id : 640653820848 Question Type : MCQ Is Question Mandatory : No Calculator : None Response Time : N.A Think Time : N.A Minimum Instruction Time : 0**

**Correct Marks : 2**

**Question Label : Multiple Choice Question**

You are appointed as a Data Engineer in a company that has a legacy reporting application written in Java which suffers from performance problems. The reporting application plots dashboards with near real-time refresh (once every minute) of key business indicators to help management take live decisions. The application reads data directly from the source database of MongoDB, aggregates using simple counts and shows them visually in a UI. The performance problem of this application comes because the source database is at times overloaded and therefore the 
