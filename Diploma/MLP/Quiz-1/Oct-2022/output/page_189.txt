```python
from math import nan
import numpy as np
from sklearn.impute import SimpleImputer
data=[(2,3),(4,5),(3,1),(1,2),(5,nan)]
imputer = SimpleImputer(missing_values = np.nan, strategy ='mean',
                        add_indicator=True)

imputer = imputer.fit(data)
data_imputed_with_indicator = imputer.transform(data)
print (data_imputed_with_indicator)
```
**Options :**

1. 6406531285643. 
\[ [2. 3. 0.] [4. 5. 0.] [3. 1. 0.] [1. 2. 0.] [5. 2.2. 1.] \]

2. 6406531285644. 
\[ [2. 3. 0.] [4. 5. 0.] [3. 1. 0.] [1. 2. 0.] [5. 2.75 1.] \]

3. 6406531285645. 
\[ [2. 3.] [4. 5.] [3. 1.] [1. 2.] [5. 2.2] \]

4. 6406531285646. 
There are some mistakes in the code, hence it will produce errors.

---

**Question Number : 197 Question Id : 640653386577 Question Type : MCQ Is Question Mandatory : No Calculator : None Response Time : N.A Think Time : N.A Minimum Instruction Time : 0**

**Correct Marks : 3**

**Question Label : Multiple Choice Question**

Consider the following code snippet:

```python
data=np.array([5,7,2,1])
from sklearn.preprocessing import PolynomialFeatures
poly= PolynomialFeatures(degree=2, interaction_only=True)
data = data.reshape(2,2)
poly.fit_transform(data)
```

Which of the following could be the correct output?

**Options :**
