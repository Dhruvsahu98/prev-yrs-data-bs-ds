Consider the below Quick sort algorithm to sort elements in ascending order using first element as pivot.

```python
def partition(L, lower, upper):
    # Select first element as a pivot
    pivot = L[lower]
    i = lower
    for j in range(lower+1, upper+1):
        if L[j] <= pivot:
            i += 1
            L[i], L[j] = L[j], L[i]
    L[lower], L[i] = L[i], L[lower]
    # Return the position of pivot
    return i

def quicksort(L, lower, upper):
    if(lower < upper):
        pivot_pos = partition(L, lower, upper)
        # Call the quick sort on leftside part of pivot
        quicksort(L, lower, pivot_pos-1)
        # Call the quick sort on rightside part of pivot
        quicksort(L, pivot_pos+1, upper)
    return L
```

Which of the below input sequence will require the **maximum** number of comparisons?

**Options :**

6406532467872.  ✓ [22, 25, 56, 67, 89]

6406532467873.  ✗ [52, 25, 76, 67, 89]

6406532467874.  ✗ [22, 25, 76, 67, 50]

6406532467875.  ✗ [52, 25, 89, 67, 76]

**Question Number :** 111 **Question Id :** 640653737386 **Question Type :** MCQ Is Question
**Mandatory :** No Calculator : None Response Time : N.A Think Time : N.A Minimum Instruction Time : 0
**Correct Marks :** 4

**Question Label :** Multiple Choice Question