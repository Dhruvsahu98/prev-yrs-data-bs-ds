Consider the following graph

```python
# Graph structure:
graph = {
    1: [2, 4],
    2: [1, 3, 4, 5, 7],
    3: [2, 6],
    4: [1, 2, 5],
    5: [2, 4, 6, 7],
    6: [3, 5],
    7: [2, 5]
}

# Implement DFS algorithm with the given conditions
def dfs(graph, start, visited):
    visited.append(start)
    for neighbor in graph[start]:
        if neighbor not in visited:
            dfs(graph, neighbor, visited)

# Starting from vertex 5
visited = []
dfs(graph, 5, visited)

# Calculate the maximum height of the stack
stack_height = len(visited)
```

DFS algorithm is applied starting from vertex 5 on the given graph. What will be the maximum possible height till which the stack will grow while making the DFS traversal?

Note : When a node has multiple neighbours, DFS would visit the numerically smaller valued node first.

**Options :**
6406531562828.  3
6406531562829.  4
6406531562830.  5
6406531562831.  6
6406531562832.  7

Sub-Section Number : 4
Sub-Section Id : 6406536775
Question Shuffling Allowed : Yes
Is Section Default?: null

Question Number : 97 Question Id : 640653470297 Question Type : SA Calculator : None
Response Time : N.A Think Time : N.A Minimum Instruction Time : 0
Correct Marks : 4
Question Label : Short Answer Question