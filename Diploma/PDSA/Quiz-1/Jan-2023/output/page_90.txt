Sub-Section Id : 6406536776
Question Shuffling Allowed : Yes
Is Section Default? : null

Question Number : 100 Question Id : 640653470300 Question Type : MSQ Is Question Mandatory : No Calculator : None Response Time : N.A Think Time : N.A Minimum Instruction Time : 0
Correct Marks : 3 Selectable Option : 0
Question Label : Multiple Select Question

```python
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
```

Consider an implementation of a singly linked list where each node is created using the given class `Node`. Suppose it has a `head` pointer that points to the first node of the linked list and a `tail` pointer that points to the last element of the linked list. 

Which of the following operation can be implemented in constant ($O(1)$) time with given representation of the linked list?

Options : 
6406531562810. ✅ Insertion of the new node at the front of the linked list.
6406531562811. ✅ Insertion of the new node at the end of the linked list.
6406531562812. ✅ Deletion of the first node of the linked list.
6406531562813. ❌ Deletion of the last node of the linked list.
6406531562814. ✅ Deletion of the second node (from starting) of the linked list

Question Number : 101 Question Id : 640653470303 Question Type : MSQ Is Question Mandatory : No Calculator : None Response Time : N.A Think Time : N.A Minimum Instruction Time : 0
Correct Marks : 3 Selectable Option : 0
Question Label : Multiple Select Question