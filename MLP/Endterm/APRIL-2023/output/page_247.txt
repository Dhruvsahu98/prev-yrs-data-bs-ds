```python
data = pd.read_csv('dataset.csv')
data = data.dropna()
X, y = data[data.columns[:-1],data[data.columns[-1]]
X = X[~y.isna()]
y = y[~y.isna()]
X_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.8)
pipe = Pipeline([('imputer', KNNImputer(n_neighbors = 3)),
                 ('estimator', LinearRegression())])
pipe.fit(X_train,y_train)
print(pipe.score(y_test, y_test))
```

```python
data = pd.read_csv('dataset.csv')
data = data.dropna()
X, y = data[data.columns[:-1],data[data.columns[-1]]
X = X[~y.isna()]
y = y.dropna()
X_train, X_test, y_train, y_test = train_test_split(X,y, test=0.2)
pipe = Pipeline([('imputer', KNNImputer(n_neighbors = 2)),
                 ('estimator', LinearRegression(fit_intercept=False))])
pipe.fit(X_train,y_train)
print(pipe.score(X_test, X_test))
```

```python
data = pd.read_csv('dataset.csv')
data = data.dropna()
X, y = data[data.columns[:-1],data[data.columns[-1]]
X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2)
pipe = Pipeline([('imputer', KNNImputer(n_neighbors = 3)),
                 ('estimator', LinearRegression())])
pipe.fit(X_train,y_train)
print(pipe.score(X_test, X_test))
```