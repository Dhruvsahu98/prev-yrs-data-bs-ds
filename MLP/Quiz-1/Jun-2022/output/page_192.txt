```python
from sklearn.feature_selection import RFE
from sklearn.linear_model import LinearRegression
from sklearn.datasets import fetch_california_housing
from sklearn.model_selection import train_test_split
X_california, y_california = fetch_california_housing(return_X_y=True)
# select a subset of data
X, y = X_california[:2000, :], y_california[:2000]
estimator = LinearRegression()
selector = RFE(estimator, n_features_to_select = 3, step=1)
selector = selector.fit(X, y)
print(selector.support_)
```

Options :

1. 6406531149519. ❌ [ True False False True False True True True]

2. 6406531149520. ✔ [ True False False False False True True True]

3. 6406531149521. ❌ [ True False False False False True True True]

4. 6406531149522. ❌ [ True False False False False True True False]

---

Question Number : 205 Question Id : 640653345649 Question Type : MCQ Is Question
Mandatory : No Calculator : None Response Time : N.A Think Time : N.A Minimum Instruction Time : 0
Correct Marks : 2

Question Label : Multiple Choice Question

Output of the following code is-

```python
movie_genres = [{'action', 'comedy' },
                {'comedy'},
                {'action', 'thriller'},
                {'science-fiction', 'action', 'thriller'}]
from sklearn.preprocessing import MultiLabelBinarizer
mlb = MultiLabelBinarizer()
mlb.fit_transform(movie_genres)
```

Options :

1. 6406531149527. ✔ array([[1, 1, 0, 0], [0, 1, 0, 0], [1, 0, 0, 1], [1, 0, 1, 1]])

2. 6406531149528. ❌ array([[1, 0, 0, 0], [0, 1, 0, 0], [1, 0, 0, 1], [1, 0, 1, 1]])

3. 6406531149529. ❌ array([[1, 0, 0, 0], [0, 1, 0, 0], [1, 0, 0, 0], [1, 0, 1, 1]])

4. 6406531149530. ❌ array([[1, 0, 0], [0, 1, 0], [1, 0, 0], [1, 0, 1]])
```